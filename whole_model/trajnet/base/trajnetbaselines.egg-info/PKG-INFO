Metadata-Version: 2.1
Name: trajnetbaselines
Version: 0.1.0
Summary: Trajnet baselines.
Home-page: https://github.com/svenkreiss/trajnetbaselines
Author: Sven Kreiss
Author-email: me@svenkreiss.com
License: MIT
Description: Venv Setup (Temporary: For VITA)
        ================================
        
        Create a common virtual environment.
        
        Go to Trajnettools.
        
        ``python3 setup.py sdist bdist_wheel``
        
        ``pip install .``
        
        
        Data Setup
        ==========
        
        Data Conversion
        ---------------
        
        For data conversion, refer to Trajnetdataset.
        
        Data Directory Setup
        --------------------
        
        All the converted datasets are stored in DATA_BLOCK
        
        Directory structure of DATA_BLOCK:
        
        - Dataset1 (default: trajdata)
        
           - train
           - val
           - test
           - test_private
        
        - Dataset2
        
           - train
           - val
           - test
           - test_private
        
        
        Move the converted dataset for training to DATA_BLOCK:
        
        ``mkdir -p DATA_BLOCK/trajdata``
        
        ``cp -r <converted_dataset>/ DATA_BLOCK/trajdata``
        
        
        The models after training are stored in OUTPUT_BLOCK:
        
        ``mkdir OUTPUT_BLOCK``
        
        Training LSTMs
        ==============
        
        The training script and its help menu:
        ``python -m trajnetbaselines.lstm.trainer --help``
        
        
        Evaluation
        ==========
        
        Evaluation on datasplits is based on the following categorization:
        
        .. image:: docs/train/Categorize.png
        
        The evaluation script and its help menu: ``python -m evaluator.trajnet_evaluator --help``
        
        .. image:: docs/train/Eval.png
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: PyPy
Provides-Extra: plot
Provides-Extra: test
